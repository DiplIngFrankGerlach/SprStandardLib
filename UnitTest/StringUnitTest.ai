Import
{
   "Strings.ad",
   "System.ad",
   "StringUnitTest.ad"
}



void StringUnitTest::run()
{
   var PrintfClass pfc;
   if(1 == 1)
   {
     var String_16 s1("aa");
     var String_16 s2("aa");
     s1.append(s2);
     if( (s1.length() != 4) || (s1.equals("aaaa") != 1) || (s1.equals("aa") == 1))
     {pfc.fstr("String unittest fail # 1").pr();}
     //pfc.fstr("s1").pr();
     s1.clear();
     s1.append("hurzlipurzligiraffe");
     s1.append(s2);
     if( (s1.length() != 21) || (s1.equals("hurzlipurzligiraffeaa") != 1) || (s1.equals("aa") == 1))
     {pfc.fstr("String unittest fail # 2").pr();}
   }
   if(1 == 1)
   {
     //pfc.fstr("s2").pr();
     var String_16 s1("aa");
     var String_16 s2;
     s2.append("hurzlipurzligiraffe");
     //pfc.fstr("s3").pr();
     s2.append(s1);
     if( (s2.length() != 21) || (s2.equals("hurzlipurzligiraffeaa") != 1) || (s2.equals("aa") == 1))
     {pfc.fstr("String unittest fail # 3").pr();}


   }
   if(1==1)
   {
     var String_16 s1("a");
     var String_16 s2("b");

     for(var int i=0;i<10;i++)
     {
        s1.append(s2);
     }
     if( (s1.length() != 11) || (s1.equals("abbbbbbbbbb") != 1) || (s1.equals("abbbb") == 1))
     {pfc.fstr("String unittest fail # 4").pr();}

   }
   if(1==1)
   {
     var String_16 s1("a");
     var String_16 s2("cc");

     for(var int i=0;i<10;i++)
     {
        s1.append(s2);
     }
     if( (s1.length() != 21) || (s1.equals("acccccccccccccccccccc") != 1) || (s1.equals("abbbb") == 1))
     {pfc.fstr("String unittest fail # 5").pr();}

   }
   if(1==1)
   {
     var String_16 s1("a");
     var String_16 s2("cc");

     for(var int i=0;i<10;i++)
     {
        s1.append(s2);
     }
     if( (s1.length() != 21) || (s1.equals("acccccccccccccccccccc") != 1) || (s1.equals("abbbb") == 1))
     {pfc.fstr("String unittest fail # 5").pr();}

   }
   if(1==1)
   {
     var String_16 s1("acccccccccccccccccccc");
     var String_16 s2("cc");

     for(var int i=0;i<10;i++)
     {
        s1.append(s2);
     }
     if( (s1.length() != 41) || (s1.equals("acccccccccccccccccccccccccccccccccccccccc") != 1) || (s1.equals("abbbb") == 1))
     {pfc.fstr("String unittest fail # 7").pr();}

   }
   if(1==1)
   {
     var String_16 s1("acccccccccccccccccccc");
     var String_16 s2("acccccccccccccccccccc");

     for(var int i=0;i<10;i++)
     {
        s1.append(s2);
     }
     var int expLength=10*21+21;
     if( (s1.length() != expLength) || (s1.equals("abbbb") == 1))
     {pfc.fstr("String unittest fail # 8").pr();}

   }
   if(1==1)
   {
      var String_16 ext;
      var String_16 filename("/home/x.docx");
      filename.rightOf('/',ext);

      if( ext.compare("x.docx") != 1)
      {pfc.fstr("String unittest fail # 88").pr();}

      //pfc.fstr("$").sa(ext).pr();
      filename.rightOf('.',ext);
      if( ext.compare("docx") != 1)
      {pfc.fstr("String unittest fail # 88.2").pr();}
      //pfc.fstr("$").sa(ext).pr();

      filename.assign("/tmp/abc.html");
      filename.rightOf('.',ext);
      if( ext.compare("html") != 1)
      {pfc.fstr("String unittest fail # 88.3").pr();}
      //pfc.fstr("$").sa(ext).pr();
   }
   //pfc.fstr("unittest finished").pr();


   if(1==1)
   {
      var String_16 s;
      s.append("abc");
      s.ensureCapacity(300);
      var int i;
      for(i=0; i < 26;i++)
      {
          s.append(cast(char,(i+(cast(int,'a')))));
      }
      if(s.equals("abcabcdefghijklmnopqrstuvwxyz") != 1)
      {
          pfc.fstr("Testcase ensureCapacity() failed").pr();
      }
      //pfc.fstr("$").sa(s).pr(); 
   } 

   if(1 == 1)
   {
       var String_16 s("1234567890123456");
       var String_16 s2;
       var int i;
       for(i=0; i < s.length(); i++)
       {
          s2.append( s.getAt(i) );
       }
       if( s.equals(s2) != 1 )
       {
          pfc.fstr("Testcase append(char) failed").pr();
       } 
       s.append('a');
       s.append('b');
       s.append('c');
       s2.clear();
       for(i=0; i < s.length(); i++)
       {
         s2.append( s.getAt(i) );
       }
       if( s.equals(s2) != 1 )
       {
         pfc.fstr("Testcase append(char) failed").pr();
       } 
   }
   
   if(1==1)
   {
        var String_16 s1;
        if(s1.equals("") != 1){pfc.fstr("Testcase String constructor failed").pr();} 

        s1.assign("Walther von der Vogelweide war ein Dichter");
        var String_16 s2(s1);
        if(s1.equals("Walther von der Vogelweide war ein Dichter") != 1)
        {pfc.fstr("Testcase String constructor 2 failed").pr();} 
        
   }
}
